"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
/** Creates the interactions with the slider */
const useDrag = ({ value, canMove, updateValue, onSlidingStart, onSlidingComplete }) => {
    // We need to access the last callback value
    const onSlidingStartRef = react_1.default.useRef(onSlidingStart);
    onSlidingStartRef.current = onSlidingStart;
    const onSlidingCompleteRef = react_1.default.useRef(onSlidingComplete);
    onSlidingCompleteRef.current = onSlidingComplete;
    // Emit the events onSlidingStart and onSlidingComplete when we start / stop sliding
    const [sliding, setSliding] = react_1.default.useState(false);
    const updateSliding = react_1.default.useCallback(slide => {
        if (slide)
            onSlidingStartRef.current && onSlidingStartRef.current(value);
        else
            onSlidingCompleteRef.current && onSlidingCompleteRef.current(value);
        setSliding(slide);
    }, [value]);
    const onPress = react_1.default.useCallback((value) => {
        if (!canMove(value))
            return;
        updateSliding(true);
        updateValue(value, 'press');
    }, [canMove, updateSliding, updateValue]);
    const onRelease = react_1.default.useCallback((value) => {
        if (!sliding)
            return;
        updateSliding(false);
        updateValue(value, 'release');
    }, [sliding, updateSliding, updateValue]);
    const onMove = react_1.default.useCallback((value) => {
        if (sliding)
            updateValue(value, 'drag');
    }, [updateValue, sliding]);
    return { onPress, onRelease, onMove };
};
exports.default = useDrag;
