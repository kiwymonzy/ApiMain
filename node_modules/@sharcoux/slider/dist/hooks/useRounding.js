"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
/**
 * Provide a rounding method given the provided slider configuration.
 * The results will be rounded, with the minimum amount of digits, and
 * we make sure that it still fits within the bounds.
*/
const useRounding = ({ step, minimumValue, maximumValue }) => {
    return react_1.default.useCallback((value) => {
        // We tolerate not rounded values when they exactly match the bounds
        if (value === minimumValue || value === maximumValue)
            return value;
        // Caluculate the precision we need to represent the values
        const precision = (!step) ? Infinity : ((step + '').split('.')[1] || '').length;
        // Round the value to match the steps
        const rounded = step ? Math.round(value * Math.pow(10, precision) / step) * step / Math.pow(10, precision) : value;
        // Ensure that the value is correctly rounded for decimals
        const hardRounded = precision === 0 || precision === Infinity ? rounded : Number.parseFloat(rounded.toFixed(precision));
        // Ensure that the new value is still between the bounds
        const withinBounds = Math.max(minimumValue, Math.min(hardRounded, maximumValue));
        return withinBounds;
    }, [step, minimumValue, maximumValue]);
};
exports.default = useRounding;
